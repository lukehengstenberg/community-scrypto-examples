# Locking fee to pay for transaction
CALL_METHOD
    # address of the voters account
    Address("<voter_account_address>")
    "lock_fee"
    Decimal("100");

# To cast a vote the account needs to provide proof of the voter badge 
# to the vote method.
# Withdraw the voter badge from the account and put it into a proof.
CALL_METHOD
    # address of the voters account
    Address("<voter_account_address>")
    "create_proof"
    # resource address of the voting badge
    Address("<voter_badge_resource_address>");
CREATE_PROOF_FROM_AUTH_ZONE 
    Address("<voter_badge_resource_address>") 
    Proof("voter_badge");

# Casting the vote
CALL_METHOD
    # component address of the ProposalVoting component (generated by create_component.rtm)
    Address("<proposalvoting_component_address>")
    "vote"
    # proof containing the voter badge
    Proof("voter_badge")
    # NonFungibleId of the proposal being voted on (visible inside the ProposalVoting component)
    NonFungibleLocalId("{<non_fungible_uuid>}")
    # number of votes to cast
    50u16;

# Depositing everything from worktop into the account
CALL_METHOD
    # address of the voters account
    Address("<voter_account_address>")
    "deposit_batch"
    Expression("ENTIRE_WORKTOP");
