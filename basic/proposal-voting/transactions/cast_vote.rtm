# Locking fee to pay for transaction
CALL_METHOD
    # address of the voters account
    Address("<voter_account_address>")
    "lock_fee"
    Decimal("100");

# To cast a vote the account needs to provide the voter badge to the vote method.
# Withdraw the voter badge from the account, into the worktop.
CALL_METHOD
    # address of the voters account
    Address("<voter_account_address>")
    "withdraw"
    # resource address of the voting badge
    Address("<voter_badge_resource_address>")
    Decimal("1");
# Take the voter badge from the worktop, put into a bucket.
TAKE_FROM_WORKTOP
    # resource address of the voting badge
    Address("<voter_badge_resource_address>")
    # put the badge inside a bucket
    Bucket("voter1_badge");
# Cast votes for a proposal
CALL_METHOD
    # component address of the ProposalVoting component (generated by create_component.rtm)
    Address("<proposalvoting_component_address>")
    "vote"
    # bucket containing the voter badge
    Bucket("voter1_badge")
    # NonFungibleId of the proposal being voted on (visible inside the ProposalVoting component)
    NonFungibleLocalId("{<non_fungible_uuid>}")
    # number of votes to cast
    10u16;

# Depositing all of the XRD from worktop into the account
CALL_METHOD
    # address of the voters account
    Address("<voter_account_address>")
    "deposit_batch"
    Expression("ENTIRE_WORKTOP");
